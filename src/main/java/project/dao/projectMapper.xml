<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 
 <mapper namespace="projectSQL">





 <delete id="adminDeleteProject" parameterType="int">
  delete from project where id=#{projectId}
 </delete>
 
 <select id="adminGetUserList" parameterType="java.util.Map" resultType="user">
	<![CDATA[
		select * from
		(select rownum rn, tt.* from
		(select * from user_table) tt
		)where rn>=#{startNum} and rn<=#{endNum}
	]]>

 </select>
 
 <!-- user 총인원 수 -->
 <select id="getUserTotalA" resultType="int">
	select count(*) from user_table
 </select>
 
 <delete id="adminDeleteUser" parameterType="String">
 	delete from user_table where id=#{id}
 </delete>
 
 
  <!-- 해당 User의 북마크 목록 가져오기-->
 <!-- user_id 받아서 List<projectDTO> 반환함-->
 <select id="getBookmark" parameterType="String" resultType="project">
  SELECT project_id from bookmark WHERE user_id=#{user_id} ORDER BY id desc
 </select>


	<!-- applicants 신청서 - 프로젝트 생성자 페이지 -->
	<select id="getProjectId" parameterType="String" resultType="Integer">
		select id from project where team_leader=#{team_leader}
	</select>
	
	<select id="getApplicants" parameterType="Integer" resultType="applicants">
		select project_id, title, user_id, app_field, tech_stack, email1, email2, reason
		from application a
		join user_table u on a.user_id = u.id
		join project p on a.project_id = p.id
		where project_id=${project_id} and status='WAITING'
	</select>
	
	
	<update id="application_table" parameterType="java.util.Map">
		update application set status = 'P_ACCEPT' where project_id=#{project_id} and user_id=#{ar}
	</update>
	
	<update id="project_table" parameterType="java.util.Map">
		update project set member_joined = member_joined + 1 where id=#{project_id}
	</update>
	
	<update id="team_member_table" parameterType="java.util.Map">
		update team_member
		set
		    member1 = coalesce(member1, #{ar}),
		    member2 = coalesce(member2, #{ar}),
		    member3 = coalesce(member3, #{ar}),
		    member4 = coalesce(member4, #{ar}),
		    member5 = coalesce(member5, #{ar}),
		    member6 = coalesce(member6, #{ar}),
		    member7 = coalesce(member7, #{ar}),
		    member8 = coalesce(member8, #{ar}),
		    member9 = coalesce(member9, #{ar})
		where id=#{project_id}	
	</update>
	
	
	<update id="declineApplicants" parameterType="java.util.Map">
		update application set status = 'P_DECLINE' where project_id=#{project_id} and user_id=#{ar}
	</update>

	
 </mapper>
 
 